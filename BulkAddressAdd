<#
BulkAddressAdd.ps1
Created by: Gabriel Vong
Last modified: 08/11/2021
The Script import a formatted csv to loop through and create an address object to your candidate config
and put it to an address group. 

Please follow readme.md (https://github.com/gabrielvong/poweralto) to connect your powershell envrionment to Panorama.
download inputexcel.csv and fill before running this script.

While XML API will do most of the input validation, the script will also validate the following:
- If there is an existing address object with same name, log/show on console and ingore the entry
- log/show on console if an entry fails XML API validation.

#>
#Envrionment Variables
$csvpath = "C:\Temp\"
$csvfile = "inputexcel.csv"
$errorlogpath = "C:\Temp\"
$errorlogfile = "configdiff.txt"

#Full path of input files/Error logs
$csvfullpath = join-path -path $csvpath -ChildPath $csvfile
$errorlog = join-path -path $errorlogpath -ChildPath $errorlogfile


date >> $errorlog
$csvfullpath >> $errorlog

echo $csvfullpath
echo $errorlog


#Import CSV
$csv = Get-Content $csvfullpath  | ConvertFrom-CSV

#Looping csv to add address/addressgroup
foreach ($endpoint in $csv) {
    $AddressNames = ($endpoint.AddressName) 
    Foreach ($AddressName in $AddressNames) {
        try
        {
          $currentAddressName = get-PaAddress -Name $AddressName
          if (([string]::IsNullOrEmpty($currentAddressName))) {
           Set-PaAddress -Name $AddressName -Value $endpoint.AddressValue -Type $endpoint.Addresstype -Description $endpoint.AddressDescription -ErrorAction Stop
                if (-not ([string]::IsNullOrEmpty($endpoint.AddressGroup))) {
                   #Adding the new object to an address group, note this command will not wipe out other existing members of the address group
                   Set-PaAddressGroup -Name $endpoint.AddressGroup -Member $AddressName -ErrorAction Stop 
                }
           }
           else {
           Write-host "Warning: No action on below address object as it already exists in Panorama:" -ForegroundColor red
           Write-Output $currentAddressName
           "Warning: No action on below address object as it already exists in Panorama:" >> $errorlog
           $currentAddressName >> $errorlog
           }
            
        }
        
        catch
        {
           Write-host $AddressName 
           Write-Host "An error occurred on the above addressName:" -ForegroundColor red
           Write-output $_

           $AddressName >> $errorlog
           "An error occurred on the above addressName:" >> $errorlog
           $_ >> $errorlog


        }
        }

    }
